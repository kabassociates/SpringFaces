<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tool="http://www.springframework.org/schema/tool"
	targetNamespace="http://www.springframework.org/schema/springfaces"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"
		schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.0.xsd" />
	<xsd:import namespace="http://www.springframework.org/schema/tool"
		schemaLocation="http://www.springframework.org/schema/tool/spring-tool-3.0.xsd" />

	<xsd:element name="integration">
		<xsd:annotation>
			<xsd:documentation source="java:org.springframework.springfaces.SpringFacesIntegration"><![CDATA[
Configures integration between Spring and JavaServer Faces.
			]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="validators" type="xsd:boolean" default="true">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
Specifies if Spring Beans implementing org.springframework.springfaces.validator.Validator or javax.faces.validator.Validator should be registered with JSF.  
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="converters" type="xsd:boolean" default="true">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
Specifies if Spring Beans implementing org.springframework.springfaces.convert.Converter or javax.faces.convert.Converter should be registered with JSF.  
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="exception-handlers" type="xsd:boolean" default="true">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
Specifies if Spring Beans implementing org.springframework.springfaces.exceptionhandler.ExceptionHandler should be registered with JSF.  
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="spring-expressions" type="xsd:boolean" default="true">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
Specifies if SPEL expressions can access properties against the current FacesContext.					
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="conversion-service">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
Create a ConversionService implementation that can be passed to the <tt>conversion-service</tt> attribute of the <tt>mvc:annotation-driven</tt> tag such that JSF
converters can be used with Spring MVC.  Effectively uses a <tt>FormattingConversionServiceFactoryBean</tt> in conjunction with a 
<tt>org.springframework.springfaces.mvc.converter.GenericFacesConverter</tt>. 				
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="mvc-support">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
Provides integration between Spring MVC and JavaServer Faces registering appropriate MVC <tt>Handlers</tt> and <tt>Interceptors</tt> as well a JSF wrappers.  This
tag is usually used in conjunction with a <tt>&lt;mvc-view-resolver&gt;</tt>.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:all minOccurs="0">
				<xsd:element name="destination-view-resolvers" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
The <tt>DestinationViewResolver</tt> beans that should be registered.						
						]]></xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:choice maxOccurs="unbounded">
							<xsd:element ref="beans:bean" minOccurs="1" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation><![CDATA[
A <tt>DestinationViewResolver</tt> bean that should be registered.						
									]]></xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="beans:ref" minOccurs="1" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation><![CDATA[
A <tt>DestinationViewResolver</tt> reference that should be registered.						
									]]></xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:attribute name="register-defaults" type="xsd:boolean" default="true">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
If default <tt>DestinationViewResolver</tt> beans should be registered.
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="navigation-outcome-resolvers" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation><![CDATA[
The <tt>NavigationOutcomeResolver</tt> beans that should be registered.						
						]]></xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:choice maxOccurs="unbounded">
							<xsd:element ref="beans:bean" minOccurs="1" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation><![CDATA[
A <tt>NavigationOutcomeResolver</tt> bean that should be registered.						
									]]></xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="beans:ref" minOccurs="1" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation><![CDATA[
A <tt>NavigationOutcomeResolver</tt> reference that should be registered.						
									]]></xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
						<xsd:attribute name="register-defaults" type="xsd:boolean" default="true">
							<xsd:annotation>
								<xsd:documentation><![CDATA[
If default <tt>NavigationOutcomeResolver</tt> beans should be registered.
								]]></xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:all>
			<xsd:attribute name="dispatcher" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation source="java:org.springframework.springfaces.mvc.servlet.Dispatcher"><![CDATA[
The bean name of the <tt>Dispatcher</tt> that is used to handler JSF requests.  If not specified a <tt>DefaultDispatcher</tt> 
will be created.  The specified or created <tt>Dispatcher</tt> will be injected into all <tt>DispatcherAware</tt> beans. 					
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="java:org.springframework.springfaces.mvc.servlet.Dispatcher" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="state-handler" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation source="java:org.springframework.springfaces.mvc.render.FacesViewStateHandler"><![CDATA[
The bean name of the <tt>FacesViewStateHandler</tt> that is used to write MVC state into JSF views.  If not specified the
<tt>ClientFacesViewStateHandler<tt> will be used.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="java:org.springframework.springfaces.mvc.render.FacesViewStateHandler" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="mvc-view-resolver">
		<xsd:annotation>
		<xsd:documentation source="java:org.springframework.springfaces.mvc.servlet.view.BookmarkableRedirectViewIdResolver"><![CDATA[
Configures a Spring MVC ViewResolver to deal with JSF views.  This resolver also ensures that <tt>redirect:</tt> prefixed views
can be used JSF bookmarking.
		]]></xsd:documentation></xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="prefix" type="xsd:string" default="/WEB-INF/pages/">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
The prefix that gets prepended to view names.  If not specified defaults to <tt>/WEB-INF/pages/<tt>.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="suffix" type="xsd:string" default=".xhtml">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
The suffix that gets appended to view names.  If not specified defaults to <tt>.xhtml<tt>.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="order" type="xsd:int" default="100">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
The order for this resolver.  If not specified defaults to <tt>100</tt>.				
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="resources">
		<xsd:annotation>
			<xsd:documentation source="java:org.springframework.springfaces.mvc.servlet.FacesResourceRequestHandler"><![CDATA[
Configures a Spring MVC handler to deal with JSF resource requests.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="order" type="xsd:int" default="0">
				<xsd:annotation>
					<xsd:documentation>
						<![CDATA[
The order for this mapping.  If not specified defaults to <tt>0</tt>.				
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>	
</xsd:schema>
